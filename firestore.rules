rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuth() {
      return request.auth != null;
    }

    match /requests_v1/{r} {
      allow get: if isAuth() && resource.data.author == request.auth.uid;
      allow list: if false;
      allow write: if false;
    }

    match /stories/{story} {
      allow read: if isAuth() && resource.data.author == request.auth.uid;
      allow create: if isAuth();
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isFavorite']));
      allow delete: if false;

      match /images/{image} {
        allow read: if isAuth() && get(/databases/$(database)/documents/stories/$(story)).data.author == request.auth.uid;
        allow create: if isAuth();
        allow update: if false;
        allow delete: if false;
      }

      match /parts/{part} {
        allow read: if isAuth() && get(/databases/$(database)/documents/stories/$(story)).data.author == request.auth.uid;
        allow create: if isAuth();
        allow update: if false;
        allow delete: if false;
      }
    }

    match /users/{r} {
          allow get: if isAuth() && r == request.auth.uid;
          allow list: if false;
          allow write: if false;
        }
  }
}
